using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Live2DCSharpSDK.Framework.Rendering.OpenGL;

public abstract class OpenGLApi
{
    public const string CSM_FRAGMENT_SHADER_FP_PRECISION_HIGH = "highp";
    public const string CSM_FRAGMENT_SHADER_FP_PRECISION_MID = "mediump";
    public const string CSM_FRAGMENT_SHADER_FP_PRECISION_LOW = "lowp";

    public const string CSM_FRAGMENT_SHADER_FP_PRECISION = CSM_FRAGMENT_SHADER_FP_PRECISION_HIGH;

    public bool IsES2;

    public uint GL_FALSE = 0;
    public uint GL_ZERO = 0;
    public uint GL_ONE = 1;
    public uint GL_TRIANGLES = 0x0004;
    public uint GL_ONE_MINUS_SRC_COLOR = 0x0301;
    public uint GL_SRC_ALPHA = 0x0302;
    public uint GL_ONE_MINUS_SRC_ALPHA = 0x0303;
    public uint GL_DST_COLOR = 0x0306;
    public uint GL_CULL_FACE = 0x0B44;
    public uint GL_FRONT_FACE = 0x0B46;
    public uint GL_DEPTH_TEST = 0x0B71;
    public uint GL_STENCIL_TEST = 0x0B90;
    public uint GL_VIEWPORT = 0x0BA2;
    public uint GL_BLEND = 0x0BE2;
    public uint GL_SCISSOR_TEST = 0x0C11;
    public uint GL_COLOR_WRITEMASK = 0x0C23;
    public uint GL_TEXTURE_2D = 0x0DE1;
    public uint GL_UNSIGNED_BYTE = 0x1401;
    public uint GL_UNSIGNED_SHORT = 0x1403;
    public uint GL_FLOAT = 0x1406;
    public uint GL_RGBA = 0x1908;
    public uint GL_LINEAR = 0x2601;
    public uint GL_TEXTURE_MAG_FILTER = 0x2800;
    public uint GL_TEXTURE_MIN_FILTER = 0x2801;
    public uint GL_TEXTURE_WRAP_S = 0x2802;
    public uint GL_TEXTURE_WRAP_T = 0x2803;
    public uint GL_COLOR_BUFFER_BIT = 0x4000;
    public uint GL_TEXTURE_BINDING_2D = 0x8069;
    public uint GL_BLEND_DST_RGB = 0x80C8;
    public uint GL_BLEND_SRC_RGB = 0x80C9;
    public uint GL_BLEND_DST_ALPHA = 0x80CA;
    public uint GL_BLEND_SRC_ALPHA = 0x80CB;
    public uint GL_CLAMP_TO_EDGE = 0x812F;
    public uint GL_TEXTURE0 = 0x84C0;
    public uint GL_TEXTURE1 = 0x84C1;
    public uint GL_ACTIVE_TEXTURE = 0x84E0;
    public uint GL_TEXTURE_MAX_ANISOTROPY_EXT = 0x84FE;
    public uint GL_VERTEX_ATTRIB_ARRAY_ENABLED = 0x8622;
    public uint GL_ARRAY_BUFFER = 0x8892;
    public uint GL_ELEMENT_ARRAY_BUFFER = 0x8893;
    public uint GL_ARRAY_BUFFER_BINDING = 0x8894;
    public uint GL_ELEMENT_ARRAY_BUFFER_BINDING = 0x8895;
    public uint GL_FRAGMENT_SHADER = 0x8B30;
    public uint GL_VERTEX_SHADER = 0x8B31;
    public uint GL_COMPILE_STATUS = 0x8B81;
    public uint GL_LINK_STATUS = 0x8B82;
    public uint GL_VALIDATE_STATUS = 0x8B83;
    public uint GL_INFO_LOG_LENGTH = 0x8B84;
    public uint GL_CURRENT_PROGRAM = 0x8B8D;
    public uint GL_FRAMEBUFFER_BINDING = 0x8CA6;
    public uint GL_COLOR_ATTACHMENT0 = 0x8CE0;
    public uint GL_FRAMEBUFFER = 0x8D40;
    public uint GL_CCW = 0x0901;

    public abstract void glViewport(float x, float y, float w, float h);
    public abstract void glClearColor(float r, float g, float b, float a);
    public abstract void glClear(uint bit);
    public abstract void glEnable(uint bit);
    public abstract void glDisable(uint bit);
    public abstract void glEnableVertexAttribArray(uint index);
    public abstract void glDisableVertexAttribArray(uint index);
    public abstract unsafe void glGetIntegerv(uint bit, int* data);
    public abstract void glGetIntegerv(uint bit, int[] data);
    public abstract void glActiveTexture(int bit);
    public abstract void glActiveTexture(uint bit);
    public abstract unsafe void glGetVertexAttribiv(int index, uint bit, int* data);
    public abstract bool glIsEnabled(uint bit);
    public abstract void glGetBooleanv(uint bit, bool[] data);
    public abstract void glUseProgram(int index);
    public abstract void glUseProgram(uint index);
    public abstract void glFrontFace(int data);
    public abstract void glFrontFace(uint data);
    public abstract void glColorMask(bool a, bool b, bool c, bool d);
    public abstract void glBindBuffer(uint bit, int index);
    public abstract void glBindTexture(uint bit, int index);
    public abstract void glBlendFuncSeparate(int a, int b, int c, int d);
    public abstract void glDeleteProgram(uint index);
    public abstract uint glGetAttribLocation(uint index, string attr);
    public abstract int glGetUniformLocation(uint idnex, string uni);
    public abstract void glUniform1i(int index, int data);
    public abstract unsafe void glVertexAttribPointer(uint index, int length, uint type, uint b, int size, float* arr);
    public abstract void glUniform4f(int index, float a, float b, float c, float d);
    public abstract void glUniformMatrix4fv(int index, int length, uint b, float[] data);
    public abstract uint glCreateProgram();
    public abstract void glAttachShader(uint a, uint b);
    public abstract void glDeleteShader(uint index);
    public abstract void glDetachShader(uint index, uint data);
    public abstract uint glCreateShader(uint type);
    public abstract void glShaderSource(uint a, int b, string source, int bit);
    public abstract void glCompileShader(uint index);
    public abstract unsafe void glGetShaderiv(uint index, uint type, int* length);
    public abstract void glGetShaderInfoLog(uint index, int length, out string log);
    public abstract void glLinkProgram(uint index);
    public abstract unsafe void glGetProgramiv(uint index, uint type, int* length);
    public abstract unsafe void glGetProgramInfoLog(uint index, int length, out string log);
    public abstract void glValidateProgram(uint index);
    public abstract unsafe void glDrawElements(uint type, int count, uint type1, ushort* arry);
    public abstract void glBindVertexArrayOES(int data);
    public abstract void glTexParameterf(uint type, uint type1, float value);
    public abstract void glBindFramebuffer(uint type, int data);
    public abstract unsafe void glGenTextures(int bit, int* data);
    public abstract void glTexImage2D(uint type, int a, uint type1, uint w, uint h, int size, uint type2, uint type3, int data);
    public abstract void glTexParameteri(uint a, uint b, uint c);
    public abstract unsafe void glGenFramebuffers(int size, int* data);
    public abstract void glFramebufferTexture2D(uint a, uint b, uint c, int buff, uint data);
    public abstract unsafe void glDeleteTextures(int size, int* data);
    public abstract unsafe void glDeleteFramebuffers(int size, int* data);
    public abstract void glBlendFunc(uint a, uint b);
    public abstract void GetWindowSize(out int w, out int h);
}
